language: minimal

services: docker

env:
  - DOCKER_COMPOSE_VERSION=1.25.4

before_install:
  - git config --global core.longpaths true
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - mkdir ${HOME}/.kube
  - echo "$KUBECONFIG" | base64 --decode > ${HOME}/.kube/config
  - echo ${KUBE_CERTIFICATE} | base64 --decode > ${HOME}/.kube/udagram-ca.pem
  - echo ${KUBE_ADMIN_CERTIFICATE} | base64 --decode > ${HOME}/.kube/udagram-client-ca.pem
  - echo ${KUBE_ADMIN_KEY_DATA} | base64 --decode > ${HOME}/.kube/udagram-key.pem
  - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"

install:
  - docker-compose -f build/docker/docker-compose-build.yaml build --parallel

script:
  - build/docker/push_image.sh

after_script:
  # - sed -i -e 's|KUBE_CERTIFICATE|'"${KUBE_CERT_CA}"'|g' build/kubeconfig/kubeconfig
  # - sed -i -e 's|KUBE_SERVER_URL|'"${KUBE_SERVER_URL}"'|g' build/kubeconfig/kubeconfig
  # - sed -i -e 's|KUBE_ADMIN_CERTIFICATE|'"${KUBE_ADMIN_CERTIFICATE}"'|g' build/kubeconfig/kubeconfig
  # - sed -i -e 's|KUBE_ADMIN_KEY_DATA|'"${KUBE_ADMIN_KEY_DATA}"'|g' build/kubeconfig/kubeconfig
  - kubectl config set-cluster marcelo-cluster-udagram --server=${KUBE_SERVER_URL} --certificate-authority=${HOME}/.kube/udagram-ca.pem
  - kubectl config set-credentials kubernetes-admin --client-certificate=${HOME}/.kube/udagram-client-ca.pem --client-key=${HOME}/.kube/udagram-key.pem
  - kubectl config set-context kubernetes-admin@marcelo-cluster-udagram --cluster=marcelo-cluster-udagram --namespace=default --user=kubernetes-admin
  - kubectl config use-context kubernetes-admin@marcelo-cluster-udagram
  - kubectl --kubeconfig build/kubeconfig/kubeconfig set image deployment/reverseproxy reverseproxy=${DOCKER_USERNAME}/reverseproxy
  - kubectl --kubeconfig build/kubeconfig/kubeconfig set image deployment/backend-feed backend-feed=${DOCKER_USERNAME}/restapi-feed
  - kubectl --kubeconfig build/kubeconfig/kubeconfig set image deployment/backend-user backend-user=${DOCKER_USERNAME}/restapi-user
  - kubectl --kubeconfig build/kubeconfig/kubeconfig set image deployment/frontend frontend=${DOCKER_USERNAME}/frontend


