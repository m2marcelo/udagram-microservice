language: minimal

services: docker

env:
  - DOCKER_COMPOSE_VERSION=1.25.4

before_install:
  - git config --global core.longpaths true
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - mkdir ${HOME}/.kube
  - echo ${KUBE_CERTIFICATE} | base64 --decode > ${HOME}/.kube/udagram-ca.pem
  - echo ${KUBE_ADMIN_CERTIFICATE} | base64 --decode > ${HOME}/.kube/udagram-client-ca.pem
  - echo ${KUBE_ADMIN_KEY_DATA} | base64 --decode > ${HOME}/.kube/udagram-key.pem
  - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"

install:
  - docker-compose -f build/docker/docker-compose-build.yaml build --parallel

script:
  - build/docker/push_image.sh

after_script:
  - kubectl config set-cluster marcelo-cluster-udagram --server=${KUBE_SERVER_URL} --certificate-authority=${HOME}/.kube/udagram-ca.pem
  - kubectl config set-credentials kubernetes-admin --client-certificate=${HOME}/.kube/udagram-client-ca.pem --client-key=${HOME}/.kube/udagram-key.pem
  - kubectl config set-context kubernetes-admin@marcelo-cluster-udagram --cluster=marcelo-cluster-udagram --namespace=default --user=kubernetes-admin
  - kubectl config use-context kubernetes-admin@marcelo-cluster-udagram
  - echo "Creating config map"
  - configmap=`cat "build/k8s/env-configmap.yaml" | sed "s/{{AWS_MEDIA_BUCKET}}/$AWS_MEDIA_BUCKET/g;s/{{AWS_PROFILE}}/$AWS_PROFILE/g;s/{{AWS_REGION}}/$AWS_REGION/g;s/{{POSTGRES_DATABASE}}/$POSTGRES_DATABASE/g;s/{{POSTGRES_HOST}}/$POSTGRES_HOST/g;s#{{APP_URL}}#$APP_URL#g"`
  - echo "$configmap" | kubectl apply -f -
  - echo "Creating secret"
  - secret=`cat "build/k8s/env-secret.yaml" | sed "s/{{JWT_SECRET}}/$JWT_SECRET/g;s/{{POSTGRES_USERNAME}}/$POSTGRES_USERNAME/g;s/{{POSTGRES_PASSWORD}}/$POSTGRES_PASSWORD/g;s/{{KUBECONFIG_AWS}}/$KUBECONFIG_AWS/g"`
  - echo "$secret" | kubectl apply -f -
  - echo "Creating aws secret"
  - awsSecret=`cat "build/k8s/aws-secret.yaml"`
  - echo "$awsSecret" | kubectl apply -f -
  - echo "Creating pods"
  - kubectl apply -f build/k8s/backend-feed-deployment.yaml
  - kubectl apply -f build/k8s/backend-user-deployment.yaml
  - kubectl apply -f build/k8s/reverseproxy-deployment.yaml
  - kubectl apply -f build/k8s/frontend-deployment.yaml
  - kubectl apply -f build/k8s/backend-feed-service.yaml
  - kubectl apply -f build/k8s/backend-user-service.yaml
  - kubectl apply -f build/k8s/reverseproxy-service.yaml
  - kubectl apply -f build/k8s/frontend-service.yaml
